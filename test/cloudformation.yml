AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  An Amazon S3 Role for an AWS ECS Task
# Parameters:

Resources:
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: S3CreateBucketPolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                # Allow the ECS tasks to upload logs to CloudWatch
                - "*"
              Resource: 'arn:aws:s3:::*'
            - Effect: Allow
              Action:
              - secretsmanager:DescribeSecret
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:devdboffers*
            - Sid: Stmt2GetSecretValue
              Effect: Allow
              Action:
              - secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:devdboffers*
            - Effect: Allow
              Action:
              - secretsmanager:DescribeSecret
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:stagedboffers*
            - Sid: Stmt2GetSecretValue
              Effect: Allow
              Action:
              - secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:stagedboffers*
Outputs:
  ECSTestRoleArn:
    Value: !GetAtt 
      - ECSTaskExecutionRole
      - Arn
    Description: Arn for role